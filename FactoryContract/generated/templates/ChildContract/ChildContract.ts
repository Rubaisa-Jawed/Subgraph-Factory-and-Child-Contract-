// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ChildUpdated extends ethereum.Event {
  get params(): ChildUpdated__Params {
    return new ChildUpdated__Params(this);
  }
}

export class ChildUpdated__Params {
  _event: ChildUpdated;

  constructor(event: ChildUpdated) {
    this._event = event;
  }

  get childAddress(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get data(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class ChildContract extends ethereum.SmartContract {
  static bind(address: Address): ChildContract {
    return new ChildContract("ChildContract", address);
  }

  index(): BigInt {
    let result = super.call("index", "index():(uint256)", []);

    return result[0].toBigInt();
  }

  try_index(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("index", "index():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  isEnabled(): boolean {
    let result = super.call("isEnabled", "isEnabled():(bool)", []);

    return result[0].toBoolean();
  }

  try_isEnabled(): ethereum.CallResult<boolean> {
    let result = super.tryCall("isEnabled", "isEnabled():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _data(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _index(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class UpdateChildCall extends ethereum.Call {
  get inputs(): UpdateChildCall__Inputs {
    return new UpdateChildCall__Inputs(this);
  }

  get outputs(): UpdateChildCall__Outputs {
    return new UpdateChildCall__Outputs(this);
  }
}

export class UpdateChildCall__Inputs {
  _call: UpdateChildCall;

  constructor(call: UpdateChildCall) {
    this._call = call;
  }

  get _data(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class UpdateChildCall__Outputs {
  _call: UpdateChildCall;

  constructor(call: UpdateChildCall) {
    this._call = call;
  }
}
